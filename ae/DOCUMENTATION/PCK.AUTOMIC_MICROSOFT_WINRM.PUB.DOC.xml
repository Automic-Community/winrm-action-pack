<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="11.0.0">
<DOCU name="PCK.AUTOMIC_MICROSOFT_WINRM.PUB.DOC">
<HEADER state="1">
<Title>Pack Documentation</Title>
<ArchiveKey1/>
<ArchiveKey2/>
<OH_SubType/>
</HEADER>
<DOCU_Docu state="1" type="text">
<DOC><![CDATA[About the Package
An action pack for WinRM using PowerShell. 

=Supported versions=
 3.0 or above

=Setup=
* Configure WinRM with default settings over HTTP
 1. Type the following command at a command prompt: Winrm quickconfig.
	If you are not running under the local computer Administrator account, you must either select Run as Administrator from the Start menu or use the Runas command at a command prompt.
 2. When the tool displays Make these changes [y/n]?, type y.
	If the configuration is successful, the following output is displayed:
	
	WinRM has been updated for remote management.
	WinRM service type changed to delayed auto start.
	WinRM service started.
	Created a WinRM listener on HTTP://* to accept WS-Man requests to any IP on this
	machine.
	
 3. Keep the default settings for client and server components of WinRM, or customize them. For example, you might need to add certain remote computers to the client configuration 		Trusted 
    Hosts list. A trusted hosts list should be set up when mutual authentication cannot be established. Kerberos allows mutual authentication, but it cannot be used in workgroups, only domains. A best 
    practice when setting up trusted hosts for a workgroup is to make the list should be as restricted as possible.

OR

	Configure the remote Windows machine for Basic authentication with custom settings. Using commands:
	
	setlocal EnableDelayedExpansion EnableExtensions
	title Configuring Windows Remote Management...
 
	cmd /c net stop winrm
	cmd /c winrm quickconfig -q
	cmd /c winrm quickconfig -transport:http
	cmd /c winrm set winrm/config @{MaxTimeoutms="1800000"}
	cmd /c winrm set winrm/config/winrs @{MaxMemoryPerShellMB="2048"}
	cmd /c winrm set winrm/config/service @{AllowUnencrypted="true"}
	cmd /c winrm set winrm/config/service/auth @{Basic="true"}
	cmd /c winrm set winrm/config/listener?Address=*+Transport=HTTP @{Port="5985"}
	cmd /c sc config winrm start= auto
	cmd /c net start winrm
 
	cmd /c netsh firewall set service type=remoteadmin mode=enable
	cmd /c netsh advfirewall firewall set rule group="remote administration" new enable=yes
	cmd /c netsh advfirewall firewall add rule name="Port 5985" dir=in action=allow protocol=TCP localport=5985
	
* Configure WinRM over HTTPS	
 1. Create an HTTPS listener by typing the following command: winrm quickconfig -transport:https. Be aware that you must open port 5986 for HTTPS transport to work.

 2. Our next step is to create a certificate on the target machine that has FQDN as the hostname. For that, we can run a PowerShell cmdlet on that machine.
	New-SelfSignedCertificate ?DnsName ssrmdvm3.southeastasia.cloudapp.azure.com ?CertStoreLocation Cert:\LocalMachine\My
	
	Above step will create a self-signed certificate for testing purposes. The output of the command will show a thumbprint of the certificate. That thumbprint is a 40 digit number.
	
	OR

 2.  Create a self-signed certificate for the remote host by installing selfssl.exe  the IIS 6 resource kit(http://www.microsoft.com/download/en/details.aspx?displaylang=en&id=17275) and running the 
     command below or by following the instructions in  this blog post by Hans Olav (http://www.hansolav.net/blog/SelfsignedSSLCertificatesOnIIS7AndCommonNames.aspx).
 
 3. Open a PowerShell window and enter the following command to find the thumbprint for the certificate for the remote host:
	Get-childItem cert:\LocalMachine\Root\ | Select-String -pattern <HOSTNAME>
	
 4. We will now delete the existing WinRM listener that is linked to SSL certificate with IP address and create a new listener that is linked to FQDN. To do so, we will execute two cmdlets in succession:
		
		* winrm delete winrm/config/listener?Address=*+Transport=HTTPS
		
		* winrm create winrm/config/listener?Address=*+Transport=HTTPS '@{Hostname="vviespartan03.sbb01.spoc.global"; CertificateThumbprint="Copy the thumbprint from earlier cmdlet 
                   output";port="5986"}'
			E.g. winrm create winrm/config/listener?Address=*+Transport=HTTPS             
                                '@{Hostname="vviespartan03.sbb01.spoc.global";CertificateThumbprint="A588F550237477242C3D91649105CB7DD18AFD46";port="5986"}'
			
 5. We can check  the configured listeners of WinRM by running the following command:
		winrm e winrm/config/listeners

*   Windows PowerShell 3.0 or later.
* The Microsoft .NET Framework 4.0 or later.


=Variables=
(none)

=Common Input=
-Host name:                              Specify Host name of the remote WinRM server. E.g. vviespartan03.sbb01.spoc.global
-Port:                                        Specify port number of WinRM server on which service is running. E.g. 5985
-Domain\Username:                 Provide domain and username to connect WinRM server. E.g. SBB01\TESTUSER
-Password:                               Provide password to connect WinRM server.
-Use SSL:                                 If Yes, Secure Sockets Layer (SSL) protocol will be used to establish a connection to the remote computer. By default, SSL is not used.
-Enable Multi-Hop (CredSSP): If Yes, Credential Security Support Provider (CredSSP) authentication will be used to establish a connection.
Note: CredSSP authentication is available only in Windows Vista, Windows Server 2008, and later versions of the Windows operating system.
-Skip CA Check:                       Specifies that when it connects over HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA).
-Skip CN Check:                      Specifies that the certificate common name (CN) of the server does not have to match the host name of the server. This option is used only in remote operations that use the HTTPS protocol.
-Connection Timeout(second) :             Connection Timeout. If 0 - no timeout. Default value is 3


=Actions=
Following actions are supported.

* Action name:  PCK.AUTOMIC_MICROSOFT_WINRM.PUB.ACTION.RUN_COMMANDS
* Action Description:  This action runs provided commands on remote server.

]]></DOC>
</DOCU_Docu>
</DOCU>
</uc-export>